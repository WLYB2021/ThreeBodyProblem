import{C as t,V as e,M as s,T as i,Q as n,S as a,a as o,R as r,P as l,b as h,c,d,e as p,W as m,A as u,D as g,G as y,f as v,g as b,h as _,B as f,L as P,i as x,j as E,O as S,k as w,l as M,m as T}from"./three-DWFFjUNX.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver(t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)}).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();const C={type:"change"},D={type:"start"},k={type:"end"},L=new r,I=new l,z=Math.cos(70*h.DEG2RAD),F=new e,B=2*Math.PI,R=-1,A=0,j=1,Y=2,Z=3,O=4,X=5,K=6,U=1e-6;class $ extends t{constructor(t,r=null){super(t,r),this.state=R,this.target=new e,this.cursor=new e,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:s.ROTATE,MIDDLE:s.DOLLY,RIGHT:s.PAN},this.touches={ONE:i.ROTATE,TWO:i.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new e,this._lastQuaternion=new n,this._lastTargetPosition=new e,this._quat=(new n).setFromUnitVectors(t.up,new e(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new a,this._sphericalDelta=new a,this._scale=1,this._panOffset=new e,this._rotateStart=new o,this._rotateEnd=new o,this._rotateDelta=new o,this._panStart=new o,this._panEnd=new o,this._panDelta=new o,this._dollyStart=new o,this._dollyEnd=new o,this._dollyDelta=new o,this._dollyDirection=new e,this._mouse=new o,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=H.bind(this),this._onPointerDown=q.bind(this),this._onPointerUp=V.bind(this),this._onContextMenu=et.bind(this),this._onMouseWheel=G.bind(this),this._onKeyDown=Q.bind(this),this._onTouchStart=J.bind(this),this._onTouchMove=tt.bind(this),this._onMouseDown=W.bind(this),this._onMouseMove=N.bind(this),this._interceptControlDown=st.bind(this),this._interceptControlUp=it.bind(this),null!==this.domElement&&this.connect(this.domElement),this.update()}connect(t){super.connect(t),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1});this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents();this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){null!==this._domElementKeyEvents&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(C),this.update(),this.state=R}update(t=null){const s=this.object.position;F.copy(s).sub(this.target),F.applyQuaternion(this._quat),this._spherical.setFromVector3(F),this.autoRotate&&this.state===R&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,n=this.maxAzimuthAngle;isFinite(i)&&isFinite(n)&&(i<-Math.PI?i+=B:i>Math.PI&&(i-=B),n<-Math.PI?n+=B:n>Math.PI&&(n-=B),this._spherical.theta=i<=n?Math.max(i,Math.min(n,this._spherical.theta)):this._spherical.theta>(i+n)/2?Math.max(i,this._spherical.theta):Math.min(n,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),!0===this.enableDamping?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let a=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const t=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),a=t!=this._spherical.radius}if(F.setFromSpherical(this._spherical),F.applyQuaternion(this._quatInverse),s.copy(this.target).add(F),this.object.lookAt(this.target),!0===this.enableDamping?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let t=null;if(this.object.isPerspectiveCamera){const e=F.length();t=this._clampDistance(e*this._scale);const s=e-t;this.object.position.addScaledVector(this._dollyDirection,s),this.object.updateMatrixWorld(),a=!!s}else if(this.object.isOrthographicCamera){const s=new e(this._mouse.x,this._mouse.y,0);s.unproject(this.object);const i=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),a=i!==this.object.zoom;const n=new e(this._mouse.x,this._mouse.y,0);n.unproject(this.object),this.object.position.sub(n).add(s),this.object.updateMatrixWorld(),t=F.length()}else this.zoomToCursor=!1;null!==t&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(t).add(this.object.position):(L.origin.copy(this.object.position),L.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(L.direction))<z?this.object.lookAt(this.target):(I.setFromNormalAndCoplanarPoint(this.object.up,this.target),L.intersectPlane(I,this.target))))}else if(this.object.isOrthographicCamera){const t=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),t!==this.object.zoom&&(this.object.updateProjectionMatrix(),a=!0)}return this._scale=1,this._performCursorZoom=!1,!!(a||this._lastPosition.distanceToSquared(this.object.position)>U||8*(1-this._lastQuaternion.dot(this.object.quaternion))>U||this._lastTargetPosition.distanceToSquared(this.target)>U)&&(this.dispatchEvent(C),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0)}_getAutoRotationAngle(t){return null!==t?B/60*this.autoRotateSpeed*t:B/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(.01*t);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){F.setFromMatrixColumn(e,0),F.multiplyScalar(-t),this._panOffset.add(F)}_panUp(t,e){!0===this.screenSpacePanning?F.setFromMatrixColumn(e,1):(F.setFromMatrixColumn(e,0),F.crossVectors(this.object.up,F)),F.multiplyScalar(t),this._panOffset.add(F)}_pan(t,e){const s=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;F.copy(i).sub(this.target);let n=F.length();n*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*n/s.clientHeight,this.object.matrix),this._panUp(2*e*n/s.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/s.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/s.clientHeight,this.object.matrix)):this.enablePan=!1}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:this.enableZoom=!1}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:this.enableZoom=!1}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const s=this.domElement.getBoundingClientRect(),i=t-s.left,n=e-s.top,a=s.width,o=s.height;this._mouse.x=i/a*2-1,this._mouse.y=-n/o*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(B*this._rotateDelta.x/e.clientHeight),this._rotateUp(B*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(B*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(-B*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(B*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(-B*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(1===this._pointers.length)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateStart.set(s,i)}}_handleTouchStartPan(t){if(1===this._pointers.length)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panStart.set(s,i)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),s=t.pageX-e.x,i=t.pageY-e.y,n=Math.sqrt(s*s+i*i);this._dollyStart.set(0,n)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(1==this._pointers.length)this._rotateEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateEnd.set(s,i)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(B*this._rotateDelta.x/e.clientHeight),this._rotateUp(B*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(1===this._pointers.length)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panEnd.set(s,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),s=t.pageX-e.x,i=t.pageY-e.y,n=Math.sqrt(s*s+i*i);this._dollyEnd.set(0,n),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const a=.5*(t.pageX+e.x),o=.5*(t.pageY+e.y);this._updateZoomParameters(a,o)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return void this._pointers.splice(e,1)}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];void 0===e&&(e=new o,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,s={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:s.deltaY*=16;break;case 2:s.deltaY*=100}return t.ctrlKey&&!this._controlActive&&(s.deltaY*=10),s}}function q(t){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._isTrackingPointer(t)||(this._addPointer(t),"touch"===t.pointerType?this._onTouchStart(t):this._onMouseDown(t)))}function H(t){!1!==this.enabled&&("touch"===t.pointerType?this._onTouchMove(t):this._onMouseMove(t))}function V(t){switch(this._removePointer(t),this._pointers.length){case 0:this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(k),this.state=R;break;case 1:const e=this._pointers[0],s=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:s.x,pageY:s.y})}}function W(t){let e;switch(t.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case s.DOLLY:if(!1===this.enableZoom)return;this._handleMouseDownDolly(t),this.state=j;break;case s.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=Y}else{if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=A}break;case s.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=A}else{if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=Y}break;default:this.state=R}this.state!==R&&this.dispatchEvent(D)}function N(t){switch(this.state){case A:if(!1===this.enableRotate)return;this._handleMouseMoveRotate(t);break;case j:if(!1===this.enableZoom)return;this._handleMouseMoveDolly(t);break;case Y:if(!1===this.enablePan)return;this._handleMouseMovePan(t)}}function G(t){!1!==this.enabled&&!1!==this.enableZoom&&this.state===R&&(t.preventDefault(),this.dispatchEvent(D),this._handleMouseWheel(this._customWheelEvent(t)),this.dispatchEvent(k))}function Q(t){!1!==this.enabled&&this._handleKeyDown(t)}function J(t){switch(this._trackPointer(t),this._pointers.length){case 1:switch(this.touches.ONE){case i.ROTATE:if(!1===this.enableRotate)return;this._handleTouchStartRotate(t),this.state=Z;break;case i.PAN:if(!1===this.enablePan)return;this._handleTouchStartPan(t),this.state=O;break;default:this.state=R}break;case 2:switch(this.touches.TWO){case i.DOLLY_PAN:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchStartDollyPan(t),this.state=X;break;case i.DOLLY_ROTATE:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchStartDollyRotate(t),this.state=K;break;default:this.state=R}break;default:this.state=R}this.state!==R&&this.dispatchEvent(D)}function tt(t){switch(this._trackPointer(t),this.state){case Z:if(!1===this.enableRotate)return;this._handleTouchMoveRotate(t),this.update();break;case O:if(!1===this.enablePan)return;this._handleTouchMovePan(t),this.update();break;case X:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchMoveDollyPan(t),this.update();break;case K:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchMoveDollyRotate(t),this.update();break;default:this.state=R}}function et(t){!1!==this.enabled&&t.preventDefault()}function st(t){if("Control"===t.key){this._controlActive=!0;this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}function it(t){if("Control"===t.key){this._controlActive=!1;this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}class nt{scene;camera;renderer;controls;bodies=[];trails=[];trailPoints=[];container;showTrails=!0;trailLength=100;resizeHandler;gridHelper;lastCameraDistance=0;constructor(t){const e=document.getElementById(t);if(!e)throw new Error(`找不到ID为${t}的容器元素`);this.container=e,this.scene=new c,this.scene.background=new d(657946);const s=e.clientWidth,i=e.clientHeight;this.camera=new p(75,s/i,.1,1e3),this.camera.position.set(15,10,15),this.camera.lookAt(0,0,0),this.renderer=new m({antialias:!0,alpha:!0}),this.renderer.setSize(s,i),this.renderer.setPixelRatio(window.devicePixelRatio),e.appendChild(this.renderer.domElement),this.controls=new $(this.camera,this.renderer.domElement),this.controls.enableDamping=!0,this.controls.dampingFactor=.05,this.controls.enableZoom=!0,this.controls.enablePan=!0;const n=new u(16777215,.2);this.scene.add(n);const a=new g(16777215,.8);a.position.set(10,10,10),this.scene.add(a),this.gridHelper=new y(20,20,3355443,2236962),this.scene.add(this.gridHelper),this.resizeHandler=()=>this.handleResize(),window.addEventListener("resize",this.resizeHandler)}handleResize(){const t=this.container.clientWidth,e=this.container.clientHeight;this.camera.aspect=t/e,this.camera.updateProjectionMatrix(),this.renderer.setSize(t,e)}update(t){this.ensureBodies(t.bodies),t.bodies.forEach((t,e)=>{const s=this.bodies[e];if(s){s.position.set(t.position.x,t.position.y,t.position.z);const i=Math.cbrt(t.mass)*t.radius;s.scale.set(i,i,i),this.showTrails&&this.updateTrail(t,e)}}),this.render()}ensureBodies(t){for(;this.bodies.length>t.length;){const t=this.bodies.pop(),e=this.trails.pop();this.trailPoints.pop(),t&&this.scene.remove(t),e&&this.scene.remove(e)}for(;this.bodies.length<t.length;){const e=t[this.bodies.length];this.createBodyMesh(e)}}createBodyMesh(t){const e=new v(1,32,32),s=new d(t.color),i=new b({color:s,emissive:s.clone().multiplyScalar(.5),specular:16777215,shininess:100,wireframe:!1}),n=new _(e,i),a=Math.cbrt(t.mass)*t.radius;n.scale.set(a,a,a),this.scene.add(n),this.bodies.push(n),this.trailPoints.push([]);const o=new f,r=new P({color:s.clone().multiplyScalar(.8),linewidth:1,transparent:!0,opacity:.7}),l=new x(o,r);this.scene.add(l),this.trails.push(l)}updateTrail(t,s){const i=this.trailPoints[s];if(!i)return;for(i.push(new e(t.position.x,t.position.y,t.position.z));i.length>this.trailLength;)i.shift();const n=this.trails[s];if(n&&i.length>1){const t=new Float32Array(3*i.length);i.forEach((e,s)=>{t[3*s]=e.x,t[3*s+1]=e.y,t[3*s+2]=e.z});const e=new f;e.setAttribute("position",new E(t,3)),n.geometry.dispose(),n.geometry=e}}setShowTrails(t){this.showTrails=t,this.trails.forEach(e=>{e.visible=t})}setTrailLength(t){this.trailLength=Math.max(10,Math.min(t,1e3)),this.trailPoints.forEach(t=>{for(;t.length>this.trailLength;)t.shift()})}reset(){this.clearTrails(),this.camera.position.set(15,10,15),this.camera.lookAt(0,0,0),this.controls.reset()}clearTrails(){this.trailPoints.forEach(t=>{t.length=0}),this.trails.forEach(t=>{const e=new f;t.geometry.dispose(),t.geometry=e})}updateBodyColor(t,e){if(t<0||t>=this.bodies.length)return;const s=this.bodies[t],i=this.trails[t];if(s&&s.material instanceof b&&s.material.color.setHex(parseInt(e.replace("#","0x"))),i&&i.material instanceof P){const t=new d(e);t.multiplyScalar(.8),i.material.color.copy(t)}}updateBodyShape(t,e){if(t<0||t>=this.bodies.length)return;const s=this.bodies[t];if(!s)return;const i=s.position.clone(),n=s.scale.clone();let a;const o=.2;switch(e){case"cube":a=new M(.4,.4,.4);break;case"tetrahedron":a=new w(1.5*o);break;case"octahedron":a=new S(.24);break;default:a=new v(o,16,16)}s.geometry.dispose(),s.geometry=a,s.position.copy(i),s.scale.copy(n)}updateGridSize(){const t=this.camera.position.length(),e=Math.max(20,2*t),s=Math.floor(e/2);this.scene.remove(this.gridHelper),this.gridHelper.dispose(),this.gridHelper=new y(e,s,3355443,2236962),this.scene.add(this.gridHelper)}render(){this.controls.update();const t=this.camera.position.length();Math.abs(t-this.lastCameraDistance)>1&&(this.updateGridSize(),this.lastCameraDistance=t),this.renderer.render(this.scene,this.camera)}async focusCameraToBody(t,s=1e3){if(t<0||t>=this.bodies.length)return;const i=this.bodies[t];if(!i)return;const n=i.position.clone(),a=new e(8,4,8),o=n.clone().add(a),r=this.camera.position.clone(),l=this.controls.target.clone();return new Promise(t=>{const e=performance.now(),i=()=>{const a=performance.now()-e,h=Math.min(a/s,1),c=this.easeInOutCubic(h);this.camera.position.lerpVectors(r,o,c),this.controls.target.lerpVectors(l,n,c),this.controls.update(),h<1?requestAnimationFrame(i):t()};i()})}async resetCameraToGlobalView(t=1e3){const s=new e(15,10,15),i=new e(0,0,0),n=this.camera.position.clone(),a=this.controls.target.clone();return new Promise(e=>{const o=performance.now(),r=()=>{const l=performance.now()-o,h=Math.min(l/t,1),c=this.easeInOutCubic(h);this.camera.position.lerpVectors(n,s,c),this.controls.target.lerpVectors(a,i,c),this.controls.update(),h<1?requestAnimationFrame(r):e()};r()})}easeInOutCubic(t){return t<.5?4*t*t*t:1-Math.pow(-2*t+2,3)/2}dispose(){window.removeEventListener("resize",this.resizeHandler),this.bodies.forEach(t=>{t.geometry.dispose(),t.material instanceof T&&t.material.dispose(),this.scene.remove(t)}),this.trails.forEach(t=>{t.geometry.dispose(),t.material instanceof T&&t.material.dispose(),this.scene.remove(t)}),this.renderer.dispose(),this.container.contains(this.renderer.domElement)&&this.container.removeChild(this.renderer.domElement)}}function at(t){return{x:t.x,y:t.y,z:t.z}}function ot(t,e){return{x:t.x+e.x,y:t.y+e.y,z:t.z+e.z}}function rt(t,e){return{x:t.x*e,y:t.y*e,z:t.z*e}}function lt(t,e){const s=t.x-e.x,i=t.y-e.y,n=t.z-e.z;return Math.sqrt(s*s+i*i+n*n)}let ht=1;const ct=.1;function dt(t,e){const s=(i=e.position,n=t.position,{x:i.x-n.x,y:i.y-n.y,z:i.z-n.z});var i,n;const a=s.x*s.x+s.y*s.y+s.z*s.z;if(a<.010000000000000002){const t=Math.sqrt(a);return rt(s,.1*-((ct-t)/ct))}const o=Math.sqrt(a),r=ht*t.mass*e.mass/a;return{x:s.x/o*r,y:s.y/o*r,z:s.z/o*r}}function pt(t){let e=0,s=0;t.forEach(t=>{const s=t.velocity.x*t.velocity.x+t.velocity.y*t.velocity.y+t.velocity.z*t.velocity.z;e+=.5*t.mass*s});for(let i=0;i<t.length;i++)for(let e=i+1;e<t.length;e++){const n=lt(t[i].position,t[e].position);n>ct&&(s-=ht*t[i].mass*t[e].mass/n)}return{kinetic:e,potential:s,total:e+s}}function mt(t,e){const s=t=>t.map(t=>({...t,position:at(t.position),velocity:at(t.velocity)})),i=t=>{const e=[],s=[],i=function(t){const e=t.map(t=>({...t,acceleration:{x:0,y:0,z:0}})),s=e.length;for(let i=0;i<s;i++){const t=e[i];for(let n=i+1;n<s;n++){const s=e[n],i=dt(t,s),a=rt(i,-1),o=rt(i,1/t.mass),r=rt(a,1/s.mass);t.acceleration=ot(t.acceleration,o),s.acceleration=ot(s.acceleration,r)}}return e}(t);return i.forEach(t=>{e.push(at(t.velocity)),s.push(at(t.acceleration))}),{position:e,velocity:s}},n=i(t),a=s(t);for(let p=0;p<a.length;p++)a[p].position=ot(a[p].position,rt(n.position[p],e/2)),a[p].velocity=ot(a[p].velocity,rt(n.velocity[p],e/2));const o=i(a),r=s(t);for(let p=0;p<r.length;p++)r[p].position=ot(r[p].position,rt(o.position[p],e/2)),r[p].velocity=ot(r[p].velocity,rt(o.velocity[p],e/2));const l=i(r),h=s(t);for(let p=0;p<h.length;p++)h[p].position=ot(h[p].position,rt(l.position[p],e)),h[p].velocity=ot(h[p].velocity,rt(l.velocity[p],e));const c=i(h),d=s(t);for(let p=0;p<d.length;p++)d[p].position=ot(d[p].position,rt(ot(ot(n.position[p],rt(o.position[p],2)),ot(rt(l.position[p],2),c.position[p])),e/6)),d[p].velocity=ot(d[p].velocity,rt(ot(ot(n.velocity[p],rt(o.velocity[p],2)),ot(rt(l.velocity[p],2),c.velocity[p])),e/6));return d}function ut(){const t=[{id:0,name:"天体1",mass:1,position:{x:1,y:0,z:0},velocity:{x:0,y:.5,z:0},acceleration:{x:0,y:0,z:0},color:"#FF4444",radius:.1},{id:1,name:"天体2",mass:1,position:{x:-1,y:0,z:0},velocity:{x:0,y:-.5,z:0},acceleration:{x:0,y:0,z:0},color:"#4444FF",radius:.1},{id:2,name:"天体3",mass:1,position:{x:0,y:1,z:0},velocity:{x:-.5,y:0,z:0},acceleration:{x:0,y:0,z:0},color:"#44FF44",radius:.1}];return{bodies:t,time:0,energy:pt(t)}}const gt={default:{name:"默认配置",description:"三个等质量天体的初始配置",bodies:[{mass:1,position:{x:1,y:0,z:0},velocity:{x:0,y:.5,z:0},color:"#FF4444",radius:.1},{mass:1,position:{x:-1,y:0,z:0},velocity:{x:0,y:-.5,z:0},color:"#4444FF",radius:.1},{mass:1,position:{x:0,y:1,z:0},velocity:{x:-.5,y:0,z:0},color:"#44FF44",radius:.1}]},figure8:{name:"8字轨道",description:"三体系统的8字形周期轨道",bodies:[{mass:1,position:{x:.97000436,y:-.24308753,z:0},velocity:{x:.466203685,y:.43236573,z:0},color:"#FF4444",radius:.1},{mass:1,position:{x:-.97000436,y:.24308753,z:0},velocity:{x:.466203685,y:.43236573,z:0},color:"#4444FF",radius:.1},{mass:1,position:{x:0,y:0,z:0},velocity:{x:-.93240737,y:-.86473146,z:0},color:"#44FF44",radius:.1}]},sunearthmoon:{name:"日地月系统",description:"简化的日地月三体系统",bodies:[{mass:100,position:{x:0,y:0,z:0},velocity:{x:0,y:0,z:0},color:"#FFD700",radius:.2},{mass:1,position:{x:5,y:0,z:0},velocity:{x:0,y:3.16,z:0},color:"#4444FF",radius:.1},{mass:.01,position:{x:5.1,y:0,z:0},velocity:{x:0,y:3.36,z:0},color:"#808080",radius:.05}]}};class yt{state;isRunning=!1;timeStep=.01;maxStepsWithoutRender=10;onUpdateCallback;onErrorCallback;constructor(t){this.state=t||ut()}getState(){return{bodies:this.state.bodies.map(t=>({...t,position:at(t.position),velocity:at(t.velocity),acceleration:at(t.acceleration)})),time:this.state.time,energy:{...this.state.energy}}}setParameters(t){var e;void 0!==t.timeStep&&(this.timeStep=Math.max(1e-4,Math.min(t.timeStep,.1))),void 0!==t.gravitationalConstant&&(e=t.gravitationalConstant)>0&&(ht=e),void 0!==t.maxStepsWithoutRender&&(this.maxStepsWithoutRender=Math.max(1,t.maxStepsWithoutRender))}loadPreset(t){const e=gt[t];if(!e)return this.onErrorCallback&&this.onErrorCallback(new Error(`预设场景 "${t}" 不存在`)),!1;const s=e.bodies.map((t,e)=>({id:e,name:`天体${e+1}`,mass:t.mass,position:at(t.position),velocity:at(t.velocity),acceleration:{x:0,y:0,z:0},color:t.color,radius:t.radius}));return this.state={bodies:s,time:0,energy:pt(s)},!0}updateBodyMass(t,e){const s=this.state.bodies.find(e=>e.id===t);return!(!s||e<=0)&&(s.mass=e,this.state.energy=pt(this.state.bodies),!0)}updateBodyPosition(t,e){const s=this.state.bodies.find(e=>e.id===t);return!(!s||3!==e.length)&&(s.position.x=e[0],s.position.y=e[1],s.position.z=e[2],s.velocity.x=0,s.velocity.y=0,s.velocity.z=0,s.acceleration.x=0,s.acceleration.y=0,s.acceleration.z=0,this.state.energy=pt(this.state.bodies),!0)}reset(){this.state=ut(),this.isRunning=!1}start(){this.isRunning=!0}pause(){this.isRunning=!1}toggle(){this.isRunning=!this.isRunning}step(t=1){this.simulateStep(t)}simulateStep(t=1){try{const e=this.timeStep*t,s=mt(this.state.bodies,e);this.state.bodies=s,this.state.time+=e,this.state.energy=pt(s),this.onUpdateCallback&&this.onUpdateCallback(this.getState())}catch(e){this.onErrorCallback&&this.onErrorCallback(e instanceof Error?e:new Error(String(e))),this.pause()}}startAnimationLoop(t){let e=performance.now(),s=0;const i=n=>{const a=n-e,o=Math.min(a,100)/1e3;if(this.isRunning){s+=o;const t=Math.ceil(s/this.timeStep),e=Math.min(t,this.maxStepsWithoutRender);for(let i=0;i<e&&(this.simulateStep(),s-=this.timeStep,!(s<this.timeStep));i++);}return e=n,t&&t(this.getState(),o),requestAnimationFrame(i)};return requestAnimationFrame(i)}onUpdate(t){this.onUpdateCallback=t}onError(t){this.onErrorCallback=t}getIsRunning(){return this.isRunning}getTimeStep(){return this.timeStep}exportState(){return{time:this.state.time,bodies:this.state.bodies.map(t=>({id:t.id,name:t.name,mass:t.mass,position:{...t.position},velocity:{...t.velocity},color:t.color,radius:t.radius})),energy:{...this.state.energy},parameters:{timeStep:this.timeStep,gravitationalConstant:ht}}}importState(t){try{if(!t||!t.bodies||!Array.isArray(t.bodies))return!1;const e=t.bodies.map(t=>({id:t.id||0,name:t.name||"天体",mass:t.mass||1,position:t.position||{x:0,y:0,z:0},velocity:t.velocity||{x:0,y:0,z:0},acceleration:{x:0,y:0,z:0},color:t.color||"#FFFFFF",radius:t.radius||.1}));return this.state={bodies:e,time:t.time||0,energy:pt(e)},t.parameters&&t.parameters.timeStep&&(this.timeStep=t.parameters.timeStep),!0}catch(e){return this.onErrorCallback&&this.onErrorCallback(e instanceof Error?e:new Error(String(e))),!1}}}class vt{renderer;simulationEngine;animationId=null;isInitialized=!1;constructor(t){this.renderer=new nt(t.containerId),this.simulationEngine=new yt,void 0!==t.showTrails&&this.renderer.setShowTrails(t.showTrails),void 0!==t.trailLength&&this.renderer.setTrailLength(t.trailLength),t.initialPreset&&this.loadPreset(t.initialPreset)}initialize(){this.isInitialized||(this.simulationEngine.onUpdate(t=>{this.renderer.update(t)}),this.startAnimation(),this.isInitialized=!0)}startAnimation(){null===this.animationId&&(this.animationId=this.simulationEngine.startAnimationLoop(()=>{}))}stopAnimation(){this.animationId=null}loadPreset(t){if(this.simulationEngine.loadPreset(t)){this.renderer.reset();const t=this.simulationEngine.getState();return t&&this.renderer.update(t),!0}return!1}updateRendering(){const t=this.simulationEngine.getState();t&&this.renderer.update(t)}updateParameters(t){this.simulationEngine.setParameters({timeStep:t.timeStep,gravitationalConstant:t.gravitationalConstant}),void 0!==t.showTrails&&this.renderer.setShowTrails(t.showTrails),void 0!==t.trailLength&&this.renderer.setTrailLength(t.trailLength)}updateBodyMass(t,e){return this.simulationEngine.updateBodyMass(t,e)}updateBodyPosition(t,e){return this.simulationEngine.updateBodyPosition(t,e)}startSimulation(){this.simulationEngine.start()}pauseSimulation(){this.simulationEngine.pause()}toggleSimulation(){this.simulationEngine.toggle()}resetSimulation(){this.simulationEngine.reset(),this.renderer.reset();const t=this.simulationEngine.getState();this.renderer.update(t)}resetTrails(){this.renderer.clearTrails()}updateBodyColor(t,e){this.renderer.updateBodyColor(t,e)}updateBodyShape(t,e){this.renderer.updateBodyShape(t,e)}stepSimulation(t=1){this.simulationEngine.step(t)}getState(){return this.simulationEngine.getState()}onError(t){this.simulationEngine.onError(t)}async focusCameraToBody(t,e=1e3){return this.renderer.focusCameraToBody(t,e)}async resetCameraToGlobalView(t=1e3){return this.renderer.resetCameraToGlobalView(t)}dispose(){this.stopAnimation(),this.renderer.dispose(),this.isInitialized=!1}}const bt=document.getElementById("app");bt&&(bt.innerHTML='\n    <div class="three-body-app">\n      \x3c!-- 主内容区 - 3D视图占据100%视口 --\x3e\n      <main class="app-main">\n        \x3c!-- Three.js渲染容器 --\x3e\n        <div class="canvas-container" id="three-canvas-container">\n          \x3c!-- Three.js渲染器将在这里添加 --\x3e\n        </div>\n      </main>\n      \n      \x3c!-- 标题悬浮组件 --\x3e\n      <div class="floating-title-panel">\n        <h1>三体问题模拟器</h1>\n      </div>\n      \n      \x3c!-- 星球参数控制面板 - 新的可伸缩卡片布局 --\x3e\n      <div class="floating-control-panel">\n        <div class="panel-header">\n          <h3>星球参数</h3>\n          <button id="close-physics-panel-btn" class="close-panel-btn">×</button>\n        </div>\n        \n        \x3c!-- 星球卡片容器 --\x3e\n        <div class="planet-cards-container">\n          \x3c!-- 星球1卡片 --\x3e\n          <div class="planet-card" data-planet="0" data-color="#FF5252">\n            <div class="card-header" data-planet-index="0">\n              <div class="planet-indicator" style="background-color: #FF5252;"></div>\n              <h4 class="planet-name">星球1</h4>\n              <div class="expand-toggle">▼</div>\n            </div>\n            \n            <div class="card-content">\n              \x3c!-- 收缩状态：只显示关键信息 --\x3e\n              <div class="summary-view">\n                <span class="mass-display">质量: <span id="mass1Summary">1.0</span></span>\n                <span class="position-display">位置: (<span id="pos1Summary">0, 1, 0</span>)</span>\n              </div>\n              \n              \x3c!-- 展开状态：显示完整参数控制 --\x3e\n              <div class="detailed-view">\n                \x3c!-- 物理属性组 --\x3e\n                <div class="parameter-group physics-params">\n                  <h5>物理属性</h5>\n                  \n                  <div class="param-control">\n                    <label>质量</label>\n                    <div class="param-input-group">\n                      <input type="range" id="mass1" class="param-slider" min="1" max="10" step="0.1" value="1">\n                      <input type="number" id="mass1Input" class="param-number" min="1" max="10" step="0.1" value="1">\n                      <span class="param-unit">kg</span>\n                    </div>\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>X坐标</label>\n                    <div class="param-input-group">\n                      <input type="range" id="pos1X" class="param-slider" min="-5" max="5" step="0.1" value="0">\n                      <input type="number" id="pos1XInput" class="param-number" min="-5" max="5" step="0.1" value="0">\n                      <span class="param-unit">m</span>\n                    </div>\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>Y坐标</label>\n                    <div class="param-input-group">\n                      <input type="range" id="pos1Y" class="param-slider" min="-5" max="5" step="0.1" value="1">\n                      <input type="number" id="pos1YInput" class="param-number" min="-5" max="5" step="0.1" value="1">\n                      <span class="param-unit">m</span>\n                    </div>\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>Z坐标</label>\n                    <div class="param-input-group">\n                      <input type="range" id="pos1Z" class="param-slider" min="-5" max="5" step="0.1" value="0">\n                      <input type="number" id="pos1ZInput" class="param-number" min="-5" max="5" step="0.1" value="0">\n                      <span class="param-unit">m</span>\n                    </div>\n                  </div>\n                </div>\n                \n                \x3c!-- 外观属性组 --\x3e\n                <div class="parameter-group visual-params">\n                  <h5>外观属性</h5>\n                  \n                  <div class="param-control">\n                    <label>名称</label>\n                    <input type="text" id="name1" class="param-text" value="星球1" maxlength="20">\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>颜色</label>\n                    <input type="color" id="color1" class="param-color" value="#FF5252">\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>形状</label>\n                    <select id="shape1" class="param-select">\n                      <option value="sphere">球体</option>\n                      <option value="cube">立方体</option>\n                      <option value="tetrahedron">四面体</option>\n                      <option value="octahedron">八面体</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \x3c!-- 星球2卡片 --\x3e\n          <div class="planet-card" data-planet="1" data-color="#448AFF">\n            <div class="card-header" data-planet-index="1">\n              <div class="planet-indicator" style="background-color: #448AFF;"></div>\n              <h4 class="planet-name">星球2</h4>\n              <div class="expand-toggle">▼</div>\n            </div>\n            \n            <div class="card-content">\n              <div class="summary-view">\n                <span class="mass-display">质量: <span id="mass2Summary">1.0</span></span>\n                <span class="position-display">位置: (<span id="pos2Summary">-1, 0, 0</span>)</span>\n              </div>\n              \n              <div class="detailed-view">\n                <div class="parameter-group physics-params">\n                  <h5>物理属性</h5>\n                  \n                  <div class="param-control">\n                    <label>质量</label>\n                    <div class="param-input-group">\n                      <input type="range" id="mass2" class="param-slider" min="1" max="10" step="0.1" value="1">\n                      <input type="number" id="mass2Input" class="param-number" min="1" max="10" step="0.1" value="1">\n                      <span class="param-unit">kg</span>\n                    </div>\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>X坐标</label>\n                    <div class="param-input-group">\n                      <input type="range" id="pos2X" class="param-slider" min="-5" max="5" step="0.1" value="-1">\n                      <input type="number" id="pos2XInput" class="param-number" min="-5" max="5" step="0.1" value="-1">\n                      <span class="param-unit">m</span>\n                    </div>\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>Y坐标</label>\n                    <div class="param-input-group">\n                      <input type="range" id="pos2Y" class="param-slider" min="-5" max="5" step="0.1" value="0">\n                      <input type="number" id="pos2YInput" class="param-number" min="-5" max="5" step="0.1" value="0">\n                      <span class="param-unit">m</span>\n                    </div>\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>Z坐标</label>\n                    <div class="param-input-group">\n                      <input type="range" id="pos2Z" class="param-slider" min="-5" max="5" step="0.1" value="0">\n                      <input type="number" id="pos2ZInput" class="param-number" min="-5" max="5" step="0.1" value="0">\n                      <span class="param-unit">m</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class="parameter-group visual-params">\n                  <h5>外观属性</h5>\n                  \n                  <div class="param-control">\n                    <label>名称</label>\n                    <input type="text" id="name2" class="param-text" value="星球2" maxlength="20">\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>颜色</label>\n                    <input type="color" id="color2" class="param-color" value="#448AFF">\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>形状</label>\n                    <select id="shape2" class="param-select">\n                      <option value="sphere">球体</option>\n                      <option value="cube">立方体</option>\n                      <option value="tetrahedron">四面体</option>\n                      <option value="octahedron">八面体</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          \x3c!-- 星球3卡片 --\x3e\n          <div class="planet-card" data-planet="2" data-color="#FFC107">\n            <div class="card-header" data-planet-index="2">\n              <div class="planet-indicator" style="background-color: #FFC107;"></div>\n              <h4 class="planet-name">星球3</h4>\n              <div class="expand-toggle">▼</div>\n            </div>\n            \n            <div class="card-content">\n              <div class="summary-view">\n                <span class="mass-display">质量: <span id="mass3Summary">1.0</span></span>\n                <span class="position-display">位置: (<span id="pos3Summary">1, 0, 0</span>)</span>\n              </div>\n              \n              <div class="detailed-view">\n                <div class="parameter-group physics-params">\n                  <h5>物理属性</h5>\n                  \n                  <div class="param-control">\n                    <label>质量</label>\n                    <div class="param-input-group">\n                      <input type="range" id="mass3" class="param-slider" min="1" max="10" step="0.1" value="1">\n                      <input type="number" id="mass3Input" class="param-number" min="1" max="10" step="0.1" value="1">\n                      <span class="param-unit">kg</span>\n                    </div>\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>X坐标</label>\n                    <div class="param-input-group">\n                      <input type="range" id="pos3X" class="param-slider" min="-5" max="5" step="0.1" value="1">\n                      <input type="number" id="pos3XInput" class="param-number" min="-5" max="5" step="0.1" value="1">\n                      <span class="param-unit">m</span>\n                    </div>\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>Y坐标</label>\n                    <div class="param-input-group">\n                      <input type="range" id="pos3Y" class="param-slider" min="-5" max="5" step="0.1" value="0">\n                      <input type="number" id="pos3YInput" class="param-number" min="-5" max="5" step="0.1" value="0">\n                      <span class="param-unit">m</span>\n                    </div>\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>Z坐标</label>\n                    <div class="param-input-group">\n                      <input type="range" id="pos3Z" class="param-slider" min="-5" max="5" step="0.1" value="0">\n                      <input type="number" id="pos3ZInput" class="param-number" min="-5" max="5" step="0.1" value="0">\n                      <span class="param-unit">m</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class="parameter-group visual-params">\n                  <h5>外观属性</h5>\n                  \n                  <div class="param-control">\n                    <label>名称</label>\n                    <input type="text" id="name3" class="param-text" value="星球3" maxlength="20">\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>颜色</label>\n                    <input type="color" id="color3" class="param-color" value="#FFC107">\n                  </div>\n                  \n                  <div class="param-control">\n                    <label>形状</label>\n                    <select id="shape3" class="param-select">\n                      <option value="sphere">球体</option>\n                      <option value="cube">立方体</option>\n                      <option value="tetrahedron">四面体</option>\n                      <option value="octahedron">八面体</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      \x3c!-- 设置面板 --\x3e\n      <div class="floating-settings-panel">\n        <div class="panel-header">\n          <h3>模拟设置</h3>\n          <button id="close-settings-panel-btn" class="close-panel-btn">×</button>\n        </div>\n        \n        \x3c!-- 预设场景 --\x3e\n        <div class="control-group">\n          <label for="preset">预设场景</label>\n          <select id="preset">\n            <option value="default">默认配置</option>\n            <option value="figure8">8字轨道</option>\n            <option value="sunearthmoon">日地月</option>\n          </select>\n        </div>\n        \n        \x3c!-- 显示选项 --\x3e\n        <div class="control-group">\n          <label for="show-trails">显示轨迹:</label>\n          <input type="checkbox" id="show-trails" checked>\n        </div>\n        \n        \x3c!-- 加载预设按钮 --\x3e\n        <button id="loadPresetBtn" class="apply-btn">加载预设</button>\n      </div>\n      \n      \x3c!-- 悬浮信息面板 --\x3e\n      <div class="floating-info-panel">\n        <div class="info-item">\n          <span class="info-label">状态:</span>\n          <span id="simulation-status" class="info-value">运行中</span>\n        </div>\n        <div class="info-item">\n          <span class="info-label">时间:</span>\n          <span id="simulationTime" class="info-value">00:00:00</span>\n        </div>\n        <div class="info-item">\n          <span class="info-label">速度:</span>\n          <span id="timeStepValue" class="info-value">1.0x</span>\n        </div>\n        <div class="info-item">\n          <span class="info-label">帧率:</span>\n          <span id="fps" class="info-value">0 FPS</span>\n        </div>\n      </div>\n      \n      \x3c!-- 预设按钮 - 右上角独立显示 --\x3e\n      <button id="preset-btn" class="floating-btn" title="预设场景">☰</button>\n      \n      \x3c!-- 右下角功能按钮组 --\x3e\n      <div class="core-actions">\n        <button id="settings-btn" class="floating-btn" title="设置">⚙</button>\n        <button id="tutorial-btn" class="floating-btn" title="教程">?</button>\n        <button id="about-btn" class="floating-btn" title="关于">ℹ</button>\n      </div>\n      \n      \x3c!-- 左下角控制按钮组 --\x3e\n      <div class="simulation-controls">\n        <button id="play-btn" class="floating-btn" title="播放/暂停">⏸</button>\n        <button id="reset-btn" class="floating-btn" title="重置">↺</button>\n      </div>\n      \n      \x3c!-- 底部居中速度控制 --\x3e\n      <div class="bottom-center-controls">\n        <div class="speed-control-wrapper">\n          <div class="speed-control-container">\n            <input type="range" id="timeStep" min="0" max="5" step="0.1" value="1" title="模拟速度">\n              \x3c!-- 速度滑块刻度 --\x3e\n              <div class="speed-ticks">\n                <div class="speed-tick" data-value="0"></div>\n                <div class="speed-tick" data-value="1"></div>\n                <div class="speed-tick" data-value="2"></div>\n                <div class="speed-tick" data-value="3"></div>\n                <div class="speed-tick" data-value="4"></div>\n                <div class="speed-tick" data-value="5"></div>\n              </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ');class _t{focusTarget=null;isAnimating=!1;renderManager;constructor(t){this.renderManager=t}async focusToPlanet(t,e=1e3){if(!this.isAnimating){this.isAnimating=!0,this.focusTarget=t;try{await this.renderManager.focusCameraToBody(t,e)}finally{this.isAnimating=!1}}}async resetToGlobalView(t=1e3){if(!this.isAnimating){this.isAnimating=!0,this.focusTarget=null;try{await this.renderManager.resetCameraToGlobalView(t)}finally{this.isAnimating=!1}}}getOptimalFocusDistance(t){return 5*t}getFocusTarget(){return this.focusTarget}isAnimatingCamera(){return this.isAnimating}}class ft{cards;activeCardIndex=null;constructor(){this.cards=document.querySelectorAll(".planet-card"),this.initializeCards()}initializeCards(){this.cards.forEach((t,e)=>{t.classList.add("collapsed");const s=t.querySelector(".card-header");s&&s.addEventListener("click",()=>this.handleCardClick(e))})}handleCardClick(t){this.activeCardIndex===t?this.collapseAllCards():this.expandCard(t)}expandCard(t){this.collapseAllCards();const e=this.cards[t];e&&(e.classList.remove("collapsed"),e.classList.add("expanded"),this.activeCardIndex=t,this.onCardExpanded?.(t))}collapseAllCards(){this.cards.forEach(t=>{t.classList.remove("expanded"),t.classList.add("collapsed")}),this.activeCardIndex=null,this.onAllCardsCollapsed?.()}getActiveCard(){return null!==this.activeCardIndex?this.cards[this.activeCardIndex]:null}getActiveCardIndex(){return this.activeCardIndex}onCardExpanded;onAllCardsCollapsed}(new class{isPlaying=!1;simulationTime=0;fps=0;lastFrameTime=performance.now();simulationSpeed=1;showPhysicsPanel=!1;showSettingsPanel=!1;renderManager=null;wasPlayingBeforePanel=!1;planetCardManager=null;cameraFocusController=null;init(){this.renderManager=new vt({containerId:"three-canvas-container",showTrails:!0,trailLength:100,initialPreset:"default"}),this.renderManager.initialize(),this.updateUIState(),this.cameraFocusController=new _t(this.renderManager),this.planetCardManager=new ft,this.setupCardManagerCallbacks(),this.bindSliderUpdates(),this.bindButtonEvents(),this.bindKeyboardShortcuts(),this.bindPanelDragging(),this.initializePanelPositions(),this.handleOutsideClick(),this.enhanceCameraControl(),this.startSimulationLoop(),this.togglePhysicsPanel(!1),this.toggleSettingsPanel(!1),setTimeout(()=>{this.showTooltip("欢迎使用三体问题模拟器！按ESC显示纯视图，按空格键暂停/播放，按R键重置")},1e3)}bindSliderUpdates(){this.bindParameterControls(),this.bindSummaryUpdates();const t=document.getElementById("timeStep"),e=document.getElementById("timeStepValue"),s=document.querySelector(".speed-ticks");let i=null;if(t&&e){this.simulationSpeed=parseFloat(t.value);const n=()=>{s&&(s.classList.add("visible"),null!==i&&clearTimeout(i))},a=()=>{s&&null===i&&(i=window.setTimeout(()=>{s.classList.remove("visible"),i=null},1e3))};t.addEventListener("mousedown",n),t.addEventListener("input",()=>{n();const s=parseFloat(t.value);e.textContent=s.toFixed(1)+"x",this.simulationSpeed=s;const i=.01*s;this.renderManager&&this.renderManager.updateParameters({timeStep:i})}),t.addEventListener("mouseup",a),t.addEventListener("mouseleave",a),t.addEventListener("touchstart",n),t.addEventListener("touchend",a),t.addEventListener("touchcancel",a)}}bindButtonEvents(){const t=document.getElementById("applyPhysicsBtn");t&&(t.style.display="none");const e=document.getElementById("loadPresetBtn");e&&e.addEventListener("click",()=>this.loadPreset());const s=document.getElementById("close-physics-panel-btn");s&&s.addEventListener("click",()=>this.togglePhysicsPanel(!1));const i=document.getElementById("close-settings-panel-btn");i&&i.addEventListener("click",()=>this.toggleSettingsPanel(!1));const n=document.getElementById("preset-btn");n&&n.addEventListener("click",()=>this.togglePhysicsPanel(!0));const a=document.getElementById("tutorial-btn");a&&a.addEventListener("click",()=>this.showTooltip("教程功能开发中"));const o=document.getElementById("about-btn");o&&o.addEventListener("click",()=>this.showTooltip("三体问题模拟器 v1.0"));const r=document.getElementById("settings-btn");r&&r.addEventListener("click",()=>this.toggleSettingsPanel(!0));const l=document.getElementById("play-btn");l&&l.addEventListener("click",()=>this.toggleSimulation());const h=document.getElementById("reset-btn");h&&h.addEventListener("click",()=>this.resetSimulation())}bindKeyboardShortcuts(){document.addEventListener("keydown",t=>{switch(t.key){case"Escape":this.togglePhysicsPanel(!1),this.toggleSettingsPanel(!1),this.showTooltip("纯视图模式");break;case" ":t.preventDefault(),this.toggleSimulation();break;case"r":case"R":this.resetSimulation()}})}bindPanelDragging(){}togglePhysicsPanel(t,e=!1){const s=document.querySelector(".floating-control-panel");s&&(this.showPhysicsPanel=void 0!==t?t:!this.showPhysicsPanel,this.showPhysicsPanel?(s.classList.add("open"),this.toggleSettingsPanel(!1,!0),document.body.classList.add("control-panel-open"),this.isPlaying&&(this.wasPlayingBeforePanel=!0,this.toggleSimulation(!0),this.showTooltip("已自动暂停模拟以便调整参数"))):(s.classList.remove("open"),this.showSettingsPanel||document.body.classList.remove("control-panel-open"),e||!this.wasPlayingBeforePanel||this.isPlaying||(this.wasPlayingBeforePanel=!1,this.toggleSimulation(!0),this.showTooltip("已自动恢复模拟"))))}toggleSettingsPanel(t,e=!1){const s=document.querySelector(".floating-settings-panel");s&&(this.showSettingsPanel=void 0!==t?t:!this.showSettingsPanel,this.showSettingsPanel?(s.classList.add("open"),this.togglePhysicsPanel(!1,!0),document.body.classList.add("control-panel-open"),this.isPlaying&&(this.wasPlayingBeforePanel=!0,this.toggleSimulation(!0),this.showTooltip("已自动暂停模拟以便调整设置"))):(s.classList.remove("open"),this.showPhysicsPanel||document.body.classList.remove("control-panel-open"),e||!this.wasPlayingBeforePanel||this.isPlaying||(this.wasPlayingBeforePanel=!1,this.toggleSimulation(!0),this.showTooltip("已自动恢复模拟"))))}initializePanelPositions(){document.querySelectorAll(".floating-info-panel, .floating-title-panel").forEach(t=>{const e=t,s=e.getBoundingClientRect(),i=window.innerWidth-s.width,n=window.innerHeight-s.height,a=parseFloat(e.style.left||"0"),o=parseFloat(e.style.top||"0");e.style.left=`${Math.max(0,Math.min(a,i))}px`,e.style.top=`${Math.max(0,Math.min(o,n))}px`})}updateUIState(){const t=document.getElementById("play-btn"),e=document.getElementById("simulation-status");t&&(t.textContent=this.isPlaying?"⏸":"▶"),e&&(e.textContent=this.isPlaying?"运行中":"已暂停")}toggleSimulation(t=!1){this.isPlaying=!this.isPlaying,t||!this.showPhysicsPanel&&!this.showSettingsPanel||(this.wasPlayingBeforePanel=!1),this.updateUIState(),this.renderManager&&this.renderManager.toggleSimulation()}resetSimulation(){this.simulationTime=0;const t=document.getElementById("simulationTime");t&&(t.textContent="00:00:00"),this.simulationSpeed=1;const e=document.getElementById("timeStep"),s=document.getElementById("timeStepValue");e&&(e.value="1"),s&&(s.textContent="1.0x"),this.renderManager&&(this.renderManager.updateParameters({timeStep:.01*this.simulationSpeed}),this.renderManager.resetSimulation()),this.showTooltip("模拟已重置")}loadPreset(){const t=document.getElementById("preset").value,e=document.getElementById("show-trails").checked;this.renderManager&&(t&&this.renderManager.loadPreset(t),this.renderManager.updateParameters({showTrails:e,trailLength:e?100:0})),this.showTooltip("预设已加载")}showTooltip(t){let e=document.querySelector(".tooltip");e&&e.remove(),e=document.createElement("div"),e.className="tooltip",e.textContent=t,document.body.appendChild(e),setTimeout(()=>{e?.remove()},3e3)}startSimulationLoop(){let t=[];const e=()=>{if(this.isPlaying){this.simulationTime+=.016*this.simulationSpeed;const t=Math.floor(this.simulationTime/3600),e=Math.floor(this.simulationTime%3600/60),s=Math.floor(this.simulationTime%60),i=document.getElementById("simulationTime");i&&(i.textContent=`${t.toString().padStart(2,"0")}:${e.toString().padStart(2,"0")}:${s.toString().padStart(2,"0")}`)}const s=performance.now(),i=(s-this.lastFrameTime)/1e3;let n=Math.round(1/i);if(n>=3){t.push(n),t.length>5&&t.shift();const e=Math.round(t.reduce((t,e)=>t+e,0)/t.length);this.fps=e}const a=document.getElementById("fps");a&&(a.textContent=`${this.fps} FPS`),this.lastFrameTime=s,this.renderManager&&(this.isPlaying?this.renderManager.stepSimulation(this.simulationSpeed):this.renderManager.updateRendering()),requestAnimationFrame(e)};e()}handleOutsideClick(){document.addEventListener("click",t=>{const e=document.querySelector(".floating-control-panel"),s=document.querySelector(".floating-settings-panel"),i=document.getElementById("settings-btn"),n=document.getElementById("preset-btn"),a=document.getElementById("close-physics-panel-btn"),o=document.getElementById("close-settings-panel-btn");e&&n&&a&&!e.contains(t.target)&&!n.contains(t.target)&&!a.contains(t.target)&&e.classList.contains("open")&&this.togglePhysicsPanel(!1),s&&i&&o&&!s.contains(t.target)&&!i.contains(t.target)&&!o.contains(t.target)&&s.classList.contains("open")&&this.toggleSettingsPanel(!1)})}bindParameterControls(){for(let t=1;t<=3;t++)this.bindPhysicsParameters(t),this.bindVisualParameters(t)}bindPhysicsParameters(t){const e={mass:`mass${t}`,posX:`pos${t}X`,posY:`pos${t}Y`,posZ:`pos${t}Z`};["mass","posX","posY","posZ"].forEach(s=>{const i=e[s],n=document.getElementById(i),a=document.getElementById(`${i}Input`);n&&a&&(n.addEventListener("input",()=>{const e=parseFloat(n.value);a.value=e.toFixed(1),this.updateParameterRealtime(t-1,s,e),this.updateSummaryDisplay(t-1)}),a.addEventListener("input",()=>{const e=parseFloat(a.value);isNaN(e)||(n.value=e.toString(),this.updateParameterRealtime(t-1,s,e),this.updateSummaryDisplay(t-1))}))})}bindVisualParameters(t){const e=document.getElementById(`name${t}`),s=document.getElementById(`color${t}`),i=document.getElementById(`shape${t}`);e&&e.addEventListener("input",()=>{this.updateVisualParameter(t-1,"name",e.value),this.updatePlanetName(t-1,e.value)}),s&&s.addEventListener("input",()=>{this.updateVisualParameter(t-1,"color",s.value),this.updatePlanetColor(t-1,s.value)}),i&&i.addEventListener("change",()=>{this.updateVisualParameter(t-1,"shape",i.value),this.updatePlanetShape(t-1,i.value)})}bindSummaryUpdates(){for(let t=0;t<3;t++)this.updateSummaryDisplay(t)}updateParameterRealtime(t,e,s){if(this.renderManager)switch(e){case"mass":this.renderManager.updateBodyMass(t,s);break;case"posX":case"posY":case"posZ":this.updatePlanetPosition(t)}}updatePlanetPosition(t){if(!this.renderManager)return;const e=document.getElementById(`pos${t+1}X`),s=document.getElementById(`pos${t+1}Y`),i=document.getElementById(`pos${t+1}Z`);if(e&&s&&i){const n=[parseFloat(e.value),parseFloat(s.value),parseFloat(i.value)];this.renderManager.updateBodyPosition(t,n),this.renderManager.resetTrails()}}updateVisualParameter(t,e,s){}updatePlanetName(t,e){const s=document.querySelector(`.planet-card[data-planet="${t}"] .planet-name`);s&&(s.textContent=e)}updatePlanetColor(t,e){const s=document.querySelector(`.planet-card[data-planet="${t}"] .planet-indicator`);s&&(s.style.backgroundColor=e),this.renderManager&&this.renderManager.updateBodyColor(t,e)}updatePlanetShape(t,e){this.renderManager&&this.renderManager.updateBodyShape(t,e)}updateSummaryDisplay(t){const e=document.getElementById(`mass${t+1}Summary`),s=document.getElementById(`pos${t+1}Summary`);if(e){const s=document.getElementById(`mass${t+1}`);s&&(e.textContent=parseFloat(s.value).toFixed(1))}if(s){const e=document.getElementById(`pos${t+1}X`),i=document.getElementById(`pos${t+1}Y`),n=document.getElementById(`pos${t+1}Z`);if(e&&i&&n){const t=parseFloat(e.value).toFixed(1),a=parseFloat(i.value).toFixed(1),o=parseFloat(n.value).toFixed(1);s.textContent=`${t}, ${a}, ${o}`}}}setupCardManagerCallbacks(){this.planetCardManager&&this.cameraFocusController&&(this.planetCardManager.onCardExpanded=async t=>{this.showTooltip(`聚焦到星球 ${t+1}`),this.cameraFocusController&&await this.cameraFocusController.focusToPlanet(t)},this.planetCardManager.onAllCardsCollapsed=async()=>{this.showTooltip("恢复全局视角"),this.cameraFocusController&&await this.cameraFocusController.resetToGlobalView()})}enhanceCameraControl(){const t=document.getElementById("three-canvas");t&&t.addEventListener("dblclick",()=>{this.showTooltip("视角已重置")})}}).init();
